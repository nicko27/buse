<div class="block" id="suivi">
    <div class="block__title glass">
        <div class="block__title-left">
            Suivi et permanences
        </div>
        <div class="block__title-center">
            <div id="maj__text-update" class="hidden progress-container">
                <div class="progress-bar"></div>
            </div>
        </div>
        <div class="block__title-right">
            <button class="btn btn-glass" onclick="updatePatrolsPerms()" data-tooltip="Lancer la mise à jour">
                <i id="maj__text-normal" class="fa fa-bolt"></i>
            </button>
        </div>
    </div>
    <div class="block__content">
        <div class="content__line">
            <div class="content__line-left">
                <div class="dropzone__blk">
                    <div class="dropzone__title glass">
                        Cliquez sur la fenêtre ci-dessous pour charger les fichiers pulsar et de permanences, sélection multiple autorisée
                    </div>
                    <div class="dropzone__elt" id="myDropzone">
                        <div class="dz-message">
                            <i class="fas fa-cloud-upload-alt"></i>
                            <div>Déposez vos fichiers ici ou cliquez pour sélectionner</div>
                            <div class="dz-allowed-files">Formats acceptés : .html, .ods</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="content__line-right">
                <div class="files__list-block">
                    <div class="files__list-title glass">
                        Liste des fichiers présents
                    </div>
                    <div class="files__list-content" id="files__list"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="flex-v flex-jcsa">
        <button onclick="window.open('index.php?page={{ PAGE_SHOW_TIMELINE }}')" class="btn btn-glass btn-glass-blue">
            <i class="fa fa-timeline"></i>
            <span>Afficher la timeline</span>
        </button>
        <button onclick="window.open('index.php?page={{ PAGE_SHOW_TIMELINE }}')" class="btn btn-glass btn-glass-blue">
            <i class="fa fa-bars-staggered"></i>
            <span>Afficher les permanences</span>
        </button>
    </div>
</div>
<script type="text/javascript" src="{{WEB_ASSETS}}/js/main/subpages/suivi.js"></script>
<script type="text/javascript" src="{{WEB_ASSETS}}/libs/dropzone/dropzone.min.js"></script>
<script type="text/javascript">
    Dropzone.autoDiscover = false;
    var myDropzone = new Dropzone("#myDropzone", {
        url: "{{WEB_PAGES}}/main/subpages/suivi/handleUpload.php",
        paramName: "file",
        maxFiles: 10,
        maxFilesize: 10,
        acceptedFiles: ".html,.ods",
        timeout: 180000, // 3 minutes
        createImageThumbnails: false,
        addRemoveLinks: true,
        headers: {
            'Cache-Control': null,
            'X-Requested-With': null
        },
        // Traductions en français
        dictDefaultMessage: "",
        dictFallbackMessage: "Votre navigateur ne supporte pas le glisser-déposer de fichiers.",
        dictFileTooBig: "Le fichier est trop volumineux ({{filesize}}MB). Taille maximum : {{maxFilesize}}MB.",
        dictInvalidFileType: "Ce type de fichier n'est pas autorisé.",
        dictResponseError: "Le serveur a répondu avec le code {{statusCode}}.",
        dictCancelUpload: "Annuler",
        dictUploadCanceled: "Upload annulé.",
        dictCancelUploadConfirmation: "Êtes-vous sûr de vouloir annuler cet upload ?",
        dictRemoveFile: "Supprimer",
        dictMaxFilesExceeded: "Vous ne pouvez pas uploader plus de fichiers.",
        // Initialisation et événements
        init: function() {
            this.on("success", function(file, response) {
                if (response.success) {
                    successNotice("Fichier uploadé avec succès");
                    // Attendre un court instant pour que le fichier soit disponible
                    setTimeout(fillFilesList, 500);
                } else {
                    errorNotice(response.message || "Erreur lors de l'upload");
                }
                this.removeFile(file);
            });

            this.on("error", function(file, errorMessage, xhr) {
                if (xhr) {
                    errorNotice("Erreur serveur : " + xhr.statusText);
                } else {
                    errorNotice(errorMessage);
                }
                this.removeFile(file);
            });

            this.on("addedfile", function(file) {
                // Vérification de la taille
                if (file.size > 10 * 1024 * 1024) {
                    this.removeFile(file);
                    errorNotice("Le fichier est trop volumineux (max 10MB)");
                    return;
                }

                // Vérification de l'extension
                var ext = file.name.split('.').pop().toLowerCase();
                if (!['html', 'ods'].includes(ext)) {
                    this.removeFile(file);
                    errorNotice("Type de fichier non autorisé (uniquement .html et .ods)");
                    return;
                }
            });

            this.on("sending", function(file, xhr, formData) {
                // Ajout de données supplémentaires si nécessaire
                // formData.append("custom_param", "value");
            });
        }
    });

    // Charger la liste des fichiers au démarrage
    fillFilesList();
</script>