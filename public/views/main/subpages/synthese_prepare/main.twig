<div class="flex-h w-available">
    <div class="block" id="synthese">
        <div class="block__title glass">
            <div class="block__title-left">
                Préparation des évènements
            </div>
            <div class="block__title-center">
                <div id="maj__text-update" class="hidden progress-container">
                    <div class="progress-bar"></div>
                </div>
            </div>
            {% if enable_mail==1 %}
                <div class="block__title-right">
                    <a href="index.php?page={{ PAGE_ACCUEIL }}&subpage={{ SUBPAGE_MAIL_SYNTHESE }}" class="btn btn-glass" onclick="updateSynthesis()" data-tooltip="Générer les mails pour les mairies">
                        <i id="maj__text-normal" class="fa fa-at"></i>
                    </a>
                </div>
            {% endif %}
        </div>

        <div class="block__content flex-h">
            <div class="block__buttons">
            </div>
            <table id="evenementsTbl">
                <thead>
                    <tr>
                        <th id="num"></th>
                        <th id="id" th-hide>Id</th>
                        <th id="date">Date</th>
                        <th id="niveau">Niveau</th>
                        <th id="categorie">Nature</th>
                        <th id="commune">Commune concernée</th>
                        <th id="unite">Unité engagée</th>
                        <th id="premiers_elt" th-edit>Premiers Elements</th>
                        <th id="cro" th-edit>CRO</th>
                        <th id="sent" th-choice>Déja envoyé</th>
                        {% if enable_mail==1 %}
                            <th id="need_to_send" th-choice th-linetoggle>Pris en compte</th>
                        {% endif %}
                    </tr>
                </thead>
                <tbody>
                    {% set pos=0 %}
                    {% for e in evenements_tbl %}
                        <tr id="{{e.id}}" name="{{ e.id }}">
                            {% set pos=pos+1 %}
                            <td id="num_{{ e.id }}" name="num_"{{ e.id }}>{{ pos }}</td>
                            <td id="id_{{ e.id }}" name="id_{{ e.id}}">{{ e.id }}</td>
                            <td id="date_{{ e.id }}" name="date_{{ e.id}}">{{ e.date }} {{e.heure}}</td>
                            <td id="niveau_{{ e.id }}" name="niveau_{{ e.id}}">{{ e.niveau }}</td>
                            <td id="categorie_{{ e.id }}" name="categorie_{{ e.id}}">{{ e.categorie }}</td>
                            <td id="commune_{{ e.id }}" name="commune_{{ e.id}}">
                                {% if e.old_name|length >0 %}
                                    {{ e.old_name }}
                                {% else %}
                                    {{ e.name }}
                                {% endif %}
                            </td>
                            <td id="unite_engagee_{{ e.id }}" name="unite_engagee_{{ e.id}}">{{ e.unite_engagee }}</td>
                            <td id="premiers_elt_{{ e.id }}" name="premiers_elt_{{ e.id}}">{{ e.premiers_elt }}</td>
                            <td id="cro_{{ e.id }}" name="cro_{{ e.id}}">{{ e.cro }}</td>
                            <td id="sent_{{ e.id }}" name="sent_{{ e.id}}">{{ e.sent }}</td>
                            {% if enable_mail==1 %}
                                <td id="need_to_send_{{ e.id }}" name="need_to_send_{{ e.id}}">
                                    {% if e.need_to_send==0 %}
                                        0
                                    {% else %}
                                        {% if e.unite_engagee|length ==0 %}
                                            0
                                        {% else %}
                                            {{ e.need_to_send }}
                                        {% endif %}
                                    {% endif %}
                                </td>
                            {% endif %}
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
             <div class="block__buttons">
                <div class="block__search">
                    <div class="filter-group">
                        <span>Rechercher dans le tableau</span>
                        <input type="text" id="search" class="filter-input" placeholder="Texte à Rechercher" autocomplete="off">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="module">
    import TableFlow from './{{ WEB_ASSETS }}/libs/tableFlow/src/tableFlow.js';

// Initialisation avec débogage détaillé
console.log('Initialisation de TableFlow...');
const evenementsTable = new TableFlow({
    tableId: 'evenementsTbl',
    debug: true,
    plugins: {
        names: ['FilterAndPaginate', 'Edit', 'Actions', 'Choice', 'Hide', 'LineToggle'],
        filterandpaginate: {
            enableFilter: true,
            globalFilter: '#search',
            debounceTime: 300,
            pageSize: 10,
            showPageSizes: true,
            showInfo: false,
            containerClass: 'pagination-container',
            paginationClass: 'pagination',
            selectClass: 'btn btn-glass btn-glass-green',
            btnClass: 'pagination-btn btn btn-glass btn-glass-blue',
            icons: {
                first: '<i class="fas fa-angle-double-left"></i>',
                prev: '<i class="fas fa-chevron-left"></i>',
                next: '<i class="fas fa-chevron-right"></i>',
                last: '<i class="fas fa-angle-double-right"></i>'
            }
        },
        lineToggle: {
            debug: true,
            applyOnInit: true,  // Appliquer à l'initialisation
            applyOnChange: true, // Appliquer lors des changements
            rules: {
                'need_to_send': [
                    {value: '0', addClass: 'line_disabled'}
                ]
            }
        },
        choice: {
            debug: true, // Active le débogage du plugin Choice
            columns: {
                'sent': {
                    type: 'toggle',
                    values: [
                        { value: '0', label: '<span style="color: gray">Non</span>', readOnly: true, readOnlyClass: 'readonly-locked' },
                        { value: '1', label: '<span style="color: black"><b>Oui</b></span>', readOnly: true, readOnlyClass: 'readonly-locked' }
                    ]
                },
                'need_to_send': {
                    type: 'toggle',
                    values: [
                        { value: '0', label: '<span style="color: red">Non</span>', readOnly: false },
                        { value: '1', label: '<span style="color: green">Oui</span>', readOnly: false }
                    ]
                }
            }
        },
        actions: {
            actionAttribute: 'th-actions',
            cellClass: 'td-actions',
            useIcons: true,
            debug: true,
            autoSave: true,
            actions: {
                save: {
                    handler: function(context) {
                        console.log('Handler save appelé avec:', context);
                        const url = "/main/subpages/synthese_prepare/update.php";
                        const data = {
                            ...context.data,
                            table: 'evenements',
                            action: 'addUpdate'
                        };
                        console.log('Données à envoyer:', data);
                        actionRow(url, data, "evenements", "addUpdate").then(result => {
                            console.log('Résultat de actionRow:', result);
                            if (result) {
                                successNotice('Événement mis à jour avec succès');
                                context.tableHandler.markRowAsSaved(context.row, 'save');
                            } else {
                                errorNotice('Erreur lors de la mise à jour de l\'événement');
                            }
                        }).catch(error => {
                            console.error('Erreur détaillée:', error);
                            errorNotice('Erreur lors de la mise à jour de l\'événement');
                        });
                    },
                    icon: '<button class="btn btn-glass btn-glass-green" tf-tooltip="Enregister les modifications"><i class="fa fa-save"></i></button>'
                }
            }
        }
    },
    pluginsPath: '../plugins'
});

</script>